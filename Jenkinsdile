Backend 


pipeline {
    agent any
    stages {
        stage('pull'){
            steps {
                git branch: 'dev', url: 'https://github.com/guru6910/Backend-CRM.git'
            }
        }
        stage('build'){
            steps {
                sh '/opt/maven/apache-maven-3.9.9/bin/mvn clean package -Dmaven.test.skip=true'
            }
        }
        stage('docker-build'){
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'passwd', usernameVariable: 'uname')]) {
                sh 'docker login -u "$uname" -p "$passwd"'
                sh 'docker build . -t guru6910/b18-backend:latest'
                sh 'docker push guru6910/b18-backend:latest'
                }
            }
        }
        stage('deploy'){
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-cred', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'aws eks update-kubeconfig --region us-east-1 --name dyl-cluster'
                sh 'kubectl apply -f ./yaml/'
                }
            }
        }
    }
}









frontend 







pipeline {
    agent any
    stages {
        stage('pull'){
            steps {
                git branch: 'main', url: 'https://github.com/guru6910/Frontend-CRM.git'
            }
        }
        stage('build'){
            steps {
                sh '''npm install
                    ng build '''
            }
        }
        stage('deploy'){
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-cred', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'aws s3 cp --recursive /var/lib/jenkins/workspace/FRONTEND/dist/angular-frontend s3://cbz-frontend-b18/'
                }
            }
        }

    }
}
